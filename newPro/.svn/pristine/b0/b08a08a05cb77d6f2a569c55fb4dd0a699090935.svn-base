package com.honghe.recordhibernate.entity;

// Generated 2014-7-30 18:08:49 by Hibernate Tools 3.4.0.CR1

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Dspecification generated by hbm2java
 */
@Entity
@Table(name = "dspecification")
public class Dspecification implements java.io.Serializable
{
    @Column(name = "record_type")
    public Integer getRecordType() {
        return recordType;
    }

    public void setRecordType(Integer recordType) {
        this.recordType = recordType;
    }

    private Integer dspecId;
    private Dtype dtype = null;
    private String dspecName;
    private String connectParam;
    private Integer recordType;

    //one2many
    private Set<Host> hosts = new HashSet<Host>(0);
    //one2many
    private Set<Spec2command> spec2commands = new HashSet<Spec2command>(0);
    //many2many
    private Set<CommandCode> commandCodes = new HashSet<CommandCode>(0);
    public Dspecification()
    {
    }

    public Dspecification(Dtype dtype)
    {
        this.dtype = dtype;
    }

    public Dspecification(String dspecName, String connectParam)
    {
        this.dspecName = dspecName;
        this.connectParam = connectParam;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "dspec_id", unique = true, nullable = false)
    public Integer getDspecId()
    {
        return this.dspecId;
    }

    public void setDspecId(Integer dspecId)
    {
        this.dspecId = dspecId;
    }

    @Column(name = "dspec_name")
    public String getDspecName()
    {
        return this.dspecName;
    }

    public void setDspecName(String dspecName)
    {
        this.dspecName = dspecName;
    }

    @Column(name = "connect_param")
    public String getConnectParam()
    {
        return this.connectParam;
    }

    public void setConnectParam(String connectParam)
    {
        this.connectParam = connectParam;
    }

    //*******************************************

    @ManyToOne(fetch = FetchType.LAZY,targetEntity=Dtype.class)
    @JoinColumn(name = "dtype_id")
    public Dtype getDtype()
    {
        return this.dtype;
    }

    public void setDtype(Dtype dtype)
    {
        this.dtype = dtype;
    }
   // @OneToMany(targetEntity = Host.class, mappedBy="dspecification", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
   // @JoinColumn(name = "dspec_id", updatable=false)
//    @OneToMany(targetEntity=Host.class,mappedBy="dspecification",fetch = FetchType.LAZY)
//    public Set<Host> getHosts()
//    {
//        return this.hosts;
//    }
//
//    public void setHosts(Set<Host> hosts)
//    {
//        this.hosts = hosts;
//    }

    @OneToMany(mappedBy="dspecification", fetch = FetchType.LAZY)
    public Set<Spec2command> getSpec2commands()
    {
        return this.spec2commands;
    }
    public void setSpec2commands(Set<Spec2command> spec2commands)
    {
        this.spec2commands = spec2commands;
    }
    @OneToMany(targetEntity = CommandCode.class,mappedBy = "dspecification",fetch = FetchType.LAZY)
    public Set<CommandCode> getCommandCodes() {
        return commandCodes;
    }

    public void setCommandCodes(Set<CommandCode> commandCodes) {
        this.commandCodes = commandCodes;
    }
}
